<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link href="/javascripts/bootstrap-3.3.7-dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap -->
  <!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 -->
  <!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 -->
  <!--[if lt IE 9]>
      <script src="/javascripts/html5shiv%2F3.7.3%2Fhtml5shiv.min.js"></script>
      <script src="/javascripts/respond.js%2F1.4.2%2Frespond.min.js"></script>
    <![endif]-->
</head>

<body>
  <h1>
    <%= title %>
  </h1>
  <p>Welcome to
    <%= title %>
  </p>
  <!--  <form action="/logout" method="POST">
      <button id="btnLoginout" type="submit">注销</button>
    </form> -->
  <button id="btnLoginout">注销</button>
  <!-- 当类型等于button，按一下回车键，不会自动调这个按钮 -->


  <!-- Modal -->
  <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title" id="myModalLabel">提示</h4>
        </div>
        <div class="modal-body">

        </div>
        <div class="modal-footer">
          <!-- <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> -->
          <button type="button" class="btn btn-primary" data-dismiss="modal">确定</button>
        </div>
      </div>
    </div>
  </div>
  <script src="/javascripts/jquery-3.3.1.min.js"></script>
  <script src="/javascripts/bootstrap-3.3.7-dist/js/bootstrap.min.js"></script>

  <script>
    // 客户端渲染，要响应res.json(....),在这里就要发起ajax请求
    $(function () {
      /* $('#btnLoginout').click(function(){
        $.post('/logout', function(data){
          console.log(data);
        })
      }) */
      $('#btnLoginout').on("click", function () {
        // $.ajax方法是JQuery脚本库进行AJAX请求底层的一个方法，像get(),post(),getJSON(),getScript()等方法都是在此方法上做了进一步的封装，让用户在使用这些封装方法时更方便，更简单，编写代码更少。
        // $.ajax()又是对原生JS对象XmlHttpRequest()对象的进一步封装。

        // 请求方式:get（查询）,post（添加）,put（编辑）,delete（删除），符合这四种风格称为“RESTFUL”
        // jQuery脚本库并没有封装put(),delete(),所以要发起此两种语法，必须使用 $.ajax()
        $.ajax({
          method: 'POST',
          url: '/logout',
          data: {},
          success: function (data) {
            console.log(data);
            if (data.code != 200) {
              $('#myModal .modal-body').text('注销出现异常');
              $('#myModal').modal();
              return;
            }
            location.href = '/login';
          },
          error: function(err){
            $('#myModal .modal-body').text(err.message);
            $('#myModal').modal();
            return;
          }
        })
        
        // 方式1：使用$.fn.extend()进行扩展
        // extend扩展，特别注意：自行扩展的属性和方法不能喝jQuery库中已存在的属性和方法重名。为了防止覆盖jQuery脚本库中的属性和方法，一般建议命名加项目和公司名称作为前缀
        /* $.fn.extend({
          abcd:"sswder",
          abc: function(){
            console.log('1234567890');
          },
          def: function(){
            console.log('wdwed');
          }
        }) */
        // 此种扩展的方法必须先选择一个元素，再调用方法，我们肯定想直接使用$.abc()
        /* $(document).abcd;
        $(document).abc();
        $(document).def(); */

        // 方式2： 直接操作$.extend()
        /* $.extend({
          abcd:"sswder",
          abc: function(){
            console.log('1234567890');
          },
          def: function(){
            console.log('wdwed');
          }
        })
        $.abc();*/
      }) 
      

    })
  </script>
</body>

</html>